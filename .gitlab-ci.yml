stages:
  - testing-integration

image: docker.registry.verbio.com/engineering/devops/debian10-citbx-cpp-rust:latest

variables:
  DOCKER_TESTING_IMAGE_NAME: docker.registry.verbio.com/csr/testing/asr4
  DOCKER_STAGING_IMAGE_NAME: docker.registry.verbio.com/csr/staging/asr4
  DOCKER_STABLE_IMAGE_NAME: docker.registry.verbio.com/csr/stable/asr4
  DOCKER_IMAGE_VERSION: 0.0.18
  MODELS_PATH: /mnt/shared/squad2/projects/asr4models/


testing:integration-testing:cpu:
  extends: .template:integration-testing
  services:
    - name: ${DOCKER_TESTING_IMAGE_NAME}-${LANGUAGE}:${DOCKER_IMAGE_VERSION}
      alias: asr4-server
      command: ["env", "/bin/bash", "-c", "/init.sh"]
  variables:
    ASR4_HOSTNAME: asr4-server

testing:integration-testing:gpu:
  extends: .template:integration-testing
  tags:
    - gpu
  before_script:
    # Install docker to run ASR4 server docker
    - !reference [.install-docker, before_script]
    # Launch ASR4 server on GPU
    - export JOB_DOCKER_ID=$(docker ps -q -f "label=com.gitlab.gitlab-runner.job.id=$CI_JOB_ID" -f "label=com.gitlab.gitlab-runner.type=build")
    - docker kill asr4-gpu-${LANGUAGE} || true && docker rm asr4-gpu-${LANGUAGE} || true
    - docker run --name asr4-gpu-${LANGUAGE} -d --gpus=all --network="container:$JOB_DOCKER_ID" -e LANGUAGE=${LANGUAGE} ${DOCKER_TESTING_IMAGE_NAME}-gpu-${LANGUAGE}:${DOCKER_IMAGE_VERSION}
    # Install the remaining testing dependencies
    - !reference [.template:integration-testing, before_script]
  after_script:
    - docker logs -t asr4-gpu-${LANGUAGE}
    - docker kill asr4-gpu-${LANGUAGE} && docker rm asr4-gpu-${LANGUAGE}


.template:integration-testing:
  stage: testing-integration
  parallel:
    matrix:
      - LANGUAGE: [en-us, es, pt-br]
  before_script:
    - apt-get update && apt-get install -y asrtest-eval libffi-dev
    - pip install .[client,test]
  script:
    - python --version
    - pytest tests/integration --junit-xml=report.xml --verbose --capture=no
  artifacts:
    expire_in: 5 days
    reports:
      junit: report.xml

.install-docker:
  before_script:
    - apt-get install -y lsb-release
    - curl -fsSL https://download.docker.com/linux/debian/gpg | gpg --dearmor -o /etc/apt/docker.gpg
    - echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/docker.gpg] https://download.docker.com/linux/debian $(lsb_release -cs) stable" | tee /etc/apt/sources.list.d/docker.list > /dev/null
    - apt-get update && apt-get install -y docker-ce docker-ce-cli containerd.io
