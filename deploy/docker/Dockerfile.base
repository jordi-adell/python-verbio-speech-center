FROM docker.registry.verbio.com/engineering/devops/debian10-citbx-cpp-rust:latest

RUN apt-get update && apt-get install -y git build-essential libxml2 zstd wget

# Install CUDA 11.7.0

RUN wget https://developer.download.nvidia.com/compute/cuda/11.7.0/local_installers/cuda_11.7.0_515.43.04_linux.run && \
    sh cuda_11.7.0_515.43.04_linux.run --silent --toolkit && \
    rm -rf cuda_11.7.0_515.43.04_linux.run

# Install CuDNN 8.4.1

RUN mkdir cudnn && \
    cd cudnn && \
    wget https://europe.mirror.pkgbuild.com/community/os/x86_64/cudnn-8.5.0.96-1-x86_64.pkg.tar.zst && \
    tar --use-compress-program=unzstd -xvf cudnn-8.5.0.96-1-x86_64.pkg.tar.zst && \
    mv usr/include/* /usr/local/cuda/include/ && \
    mv usr/lib/* /usr/local/cuda/lib64/ && \
    cd .. && \
    rm -rf cudnn

# Install Miniconda3

RUN wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh && \
    bash && \
    bash Miniconda3-latest-Linux-x86_64.sh -b && \
    rm -rf Miniconda3-latest-Linux-x86_64.sh

RUN rm -rf ~/.bashrc
RUN /root/miniconda3/bin/conda init bash
SHELL ["/bin/bash", "--login", "-c"]


# Add Intel Conda channel to download MKL

RUN conda config --add channels intel

RUN conda install python=3.8 intelpython=2022.1.0 -y

RUN conda install astunparse numpy ninja pyyaml setuptools cmake cffi typing_extensions future six requests dataclasses mkl mkl-include -y

RUN conda install -c pytorch magma-cuda117 -y

# Build PyTorch from scratch

RUN git clone --recursive https://github.com/pytorch/pytorch -b 1_12_torchgen_update && \
    cd pytorch && \
    git submodule sync && \
    git submodule update --init --recursive --jobs 0 && \
    export CMAKE_PREFIX_PATH=${CONDA_PREFIX:-"$(dirname $(which conda))/../"} && \
    CMAKE_CUDA_COMPILER=/usr/local/cuda/bin/nvcc python setup.py install && \
    cd .. && \
    rm -rf pytorch

RUN pip install onnxruntime-gpu

CMD [ "/init.sh" ]


